apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: hackathon
  name: rabbitmq
  namespace: default
spec:
  replicas: 1
  minReadySeconds: 45
  selector:
    matchLabels:
      app: rabbitmq
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:management
        imagePullPolicy: Always
        ports:
        - name: liveness-port
          containerPort: 5672
        - name: management-port
          containerPort: 15672
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: guest
        - name: RABBITMQ_DEFAULT_PASS
          value: guest
        resources:
          requests:
            cpu: 50m
            memory: 256Mi
        readinessProbe:
          httpGet:
            path: /api/healthchecks/node
            port: management-port
            httpHeaders:
            - name: Authorization
              value: Basic Z3Vlc3Q6Z3Vlc3Q=
          initialDelaySeconds: 60
          periodSeconds: 10
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /api/healthchecks/node
            port: management-port
            httpHeaders:
            - name: Authorization
              value: Basic Z3Vlc3Q6Z3Vlc3Q=
          initialDelaySeconds: 60
          periodSeconds: 300
          failureThreshold: 5
        volumeMounts:
        - name: rabbitmq-data
          mountPath: /var/lib/rabbitmq
      volumes:
      - name: rabbitmq-data
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: hackathon
  name: rabbitmq
  namespace: default
spec:
  ports:
  - name: connect
    port: 5672
    targetPort: 5672
  - name: management
    port: 15672
    targetPort: 15672
  selector:
    app: rabbitmq
  type: ClusterIP